image: google/cloud-sdk:alpine

stages:
  - unit_test
  - setup_cluster_deploy
  - dev_deploy
#  - dev_e2e_test

# Pip's cache doesn't store the python packages https://pip.pypa.io/en/stable/reference/pip_install/#caching
# If you want to also cache the installed packages, you have to install them in a virtualenv and cache it as well.
cache:
  # cache per branch
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip
    - venv/

before_script:
  - echo $PRIVATE_KEY_FILE_CONTENT > /tmp/$CI_PIPELINE_ID.json
  - export CLOUDSDK_CORE_DISABLE_PROMPTS=1 #equivalent to --quiet if does not work
  - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
  - apk update && apk fetch openjdk8 && apk add openjdk8 maven openssl
  - gcloud components install kubectl
  - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
  - chmod 700 get_helm.sh
  - ./get_helm.sh
  - pip3 install virtualenv
  - virtualenv venv
  - source venv/bin/activate

after_script:
  - rm /tmp/$CI_PIPELINE_ID.json

# Run on all branches
build:unit-test:
  stage: unit_test
  allow_failure: false
  except:
    - setup_cluster
  script:
    - chmod +x deploy/cicd_unit_test.sh
    - ./deploy/cicd_unit_test.sh

########################################################################################################################
# SETUP CLUSTER (Create branch setup_cluster at the beginning to create k8s cluster)
########################################################################################################################
setup_cluster:deploy:
  stage: setup_cluster_deploy
  allow_failure: false
  only:
    - setup_cluster
  script:
    - chmod +x deploy/cicd_setup_cluster_deploy.sh
    - ./deploy/cicd_setup_cluster_deploy.sh

########################################################################################################################
# MASTER
########################################################################################################################
dev:deploy:
  variables:
    ENVIRONMENT: dev
    DOCKER_VERSION: $CI_COMMIT_SHA
  stage: dev_deploy
  allow_failure: false
  only:
    - dev
  script:
    ## Get credentials from project
    - gcloud container clusters get-credentials "$CLUSTER_NAME" --zone="$COMPUTE_ZONE" --project="$PROJECT_ID"
    ## Execute deployment
    - chmod +x deploy/cicd_deploy.sh
    - ./deploy/cicd_deploy.sh