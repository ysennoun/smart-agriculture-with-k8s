#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: api
#  namespace: {{ .Values.namespace }}
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: api
#  template:
#    metadata:
#      labels:
#        app: api
#    spec:
#      containers:
#        - name: api
#          image: {{ .Values.containerRepository }}/api:{{ .Values.dockerVersion }}
#          ports:
#            - containerPort: 8080
#          env:
#            - name: SERVICE_NAME
#              value: smart-agriculture-vernemq
#            - name: NAMESPACE_NAME
#              value: {{ .Values.namespace }}
#            - name: PORT
#              value: "8080"
#            - name: ELASTICSEARCH_ENDPOINT
#              value: https://smart-agriculture-elasticsearch-es-http:9200
#            - name: ELASTICSEARCH_CA_FILE
#              value: "/etc/ssl/elasticsearch/tls.crt"
#            - name: ELASTICSEARCH_USER
#              value: "elastic"
#            - name: ELASTICSEARCH_PASSWORD_PATH
#              value: "/etc/credentials/elasticsearch/elastic"
#            - name: ES_ALIAS_RAW_DATA
#              value: "smart-agriculture"
#            - name: ES_ALIAS_SUMMARIZED_DATA
#              value: "average-per-device-and-date"
#          resources:
#            limits:
#              cpu: 500m
#            requests:
#              cpu: 200m
#          volumeMounts:
#            - name: elasticsearch-certificates
#              mountPath: /etc/ssl/elasticsearch/tls.crt
#              subPath: tls.crt
#              readOnly: true
#            - name: elasticsearch-credentials
#              mountPath: /etc/credentials/elasticsearch/
#              readOnly: true
#      volumes:
#        - name: elasticsearch-certificates
#          secret:
#            secretName: smart-agriculture-elasticsearch-es-http-certs-public
#        - name: elasticsearch-credentials
#          secret:
#            secretName: smart-agriculture-elasticsearch-es-elastic-user
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: gcr.io/kubernetes-e2e-test-images/echoserver:2.1
          ports:
            - containerPort: 8080
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

---

apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: {{ .Values.namespace }}
  labels:
    app: api
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: api

---
apiVersion: v1
kind: Secret
metadata:
  name: ingress-nginx-basic-auth
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  auth: YXBpOiRhcHIxJEJOWjZ4bENmJEdvSUhBZXZIV0JwN3VEZ3YzbHQuLzEK #user api pw bar #YXBpOjl1NUNHWFpocVZTS000eU0K # api:9u5CGXZhqVSKM4yM in base64

---

####### https://learnk8s.io/troubleshooting-deployments
apiVersion: v1
kind: Secret
metadata:
  name: ingress-nginx-certificates-secret
  namespace: {{ .Values.namespace }}
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lKQUlqM2E4bWE0eENrTUEwR0NTcUdTSWIzRFFFQkJRVUFNRkl4Q3pBSkJnTlYKQkFZVEFrWlNNUTh3RFFZRFZRUUtEQVpHY21GdVkyVXhEakFNQmdOVkJBc01CWE50WVhKME1TSXdJQVlEVlFRRApEQmxoY0drdWMyMWhjblF0WVdkeWFXTjFiSFIxY21VdVkyOXRNQjRYRFRJd01ETXdNakV4TkRRek5sb1hEVE13Ck1ESXlPREV4TkRRek5sb3dVakVMTUFrR0ExVUVCaE1DUmxJeER6QU5CZ05WQkFvTUJrWnlZVzVqWlRFT01Bd0cKQTFVRUN3d0ZjMjFoY25ReElqQWdCZ05WQkFNTUdXRndhUzV6YldGeWRDMWhaM0pwWTNWc2RIVnlaUzVqYjIwdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaXhOSjVzQ1J6VGNtR3YxYVhhYWhsClA4ZEUrYi84bWV0ZzBXN3NvVXFRTldXNHljbVZicGcyajhFekZ2MUpzSXU1aXpEOFNReUJoYkVpb3NIdmVpY1MKOHhzUmFqSW1IcTJ2QVRRUXdXbmdUQ2VTTmFHRXFlaUp4QVF1M1phWWd2SDlKY1JucUd0cVd2YjhGUHRabnJ6RwpoaEc1MlMzcHF0TXdEL1IzZ3lWbFF0cFRrVTBta0hOUUJxei9vbHFlSHhLUk13amNOZG9BNDNDOFB1TzliTGc5CmZ0dENXSW5uM1Z3MHBPL0VWQ0t1T1U4SXBJdjNMUFJMZG1EdWhrK2todlZZRlBQVTZUK1FTTWFrTk0xYm41VDMKMFRGTlAvMlRubzd5SXNScFFoVHJWSU1UZEhNTitWWW5BS2NTOFJ2bjNicXdLR2J3WjdNNE9HWHN6SjdDQzZYRApBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUZCUUFEZ2dFQkFDNnVMRDQvNWFPZys5VGRid1FGQTYwOW1IY0Z0K2RJCis3VXlid2lNcjhTZVdPVnRQbWNxSGV2bmNmY2drOVl0c20ydjdXZVBMSWREQnM4dnorK1E4d0NkL0ZXeFVLNlgKTFpXdEhzYlJHQWdXQTBsUzJad3J0Ky9KY2NyR3dKZEk0aGFKeGMzQmhkQ2xGV1dwUHd1YmRKMGhUZU1xQ2ltWgpkbDM1Z1d5VHZiMFAxVTNGT1czMG9YcEJTSjZJMzRFZ2c4WGFWU3FnTXlob0hhbENML3dpZE4wUlF4RUo2S0IwCnFYTHJ4cmNNS3ZZVFluWXp3ZlZaWENqRHFySjBHRjBOQmRlTmZyY2NkS29OdUJpU0Z0TFBIMDRhUGRoOGFYd0MKNmFZaXJUbVFvc2Y2UmVvSUxDR2R3OFRidDlGWlhLMzh5ZDV1MW9zODRBY2d0QW5TeDlJOXZXVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNHNUU2ViQWtjMDNKaHI5V2wybW9aVC9IUlBtLy9KbnJZTkZ1N0tGS2tEVmx1TW5KCmxXNllOby9CTXhiOVNiQ0x1WXN3L0VrTWdZV3hJcUxCNzNvbkV2TWJFV295Smg2dHJ3RTBFTUZwNEV3bmtqV2gKaEtub2ljUUVMdDJXbUlMeC9TWEVaNmhyYWxyMi9CVDdXWjY4eG9ZUnVka3Q2YXJUTUEvMGQ0TWxaVUxhVTVGTgpKcEJ6VUFhcy82SmFuaDhTa1RNSTNEWGFBT053dkQ3anZXeTRQWDdiUWxpSjU5MWNOS1R2eEZRaXJqbFBDS1NMCjl5ejBTM1pnN29aUHBJYjFXQlR6MU9rL2tFakdwRFROVzUrVTk5RXhUVC85azU2TzhpTEVhVUlVNjFTREUzUnoKRGZsV0p3Q25FdkViNTkyNnNDaG04R2V6T0RobDdNeWV3Z3Vsd3dJREFRQUJBb0lCQUdQd29GNFcvZ2wvQjhrRgovSkNnZFNHaU9SMHlBS1cvNUJkNFZhMmQ2L0dnUnVOb3N4blRjdXZnOFNHbUNSejMzS3g2SnEyWk9CVEJLZTc4CjBnSEwwUHF0LzRqdVI0bTdUWXBxT2xzRUVyaFNkOElkTnNEejdOTUNlMkY0TVEybjhDUkVCOG96Vkp1NzJVd0IKcDBDNUQ3TmlsTjlXVXNDL2szR0VKcGFoU3RMVURqMm50alhZUmU2cXVWM05NaHhOamF5c3RSS1l3TjJjQ1lGMwpMVFY1M004VElxUzdRcGREeS9pZElkQUZkdkEzZG03U0ZhUlJFb2xwRUNnK0tuZlVZM1MzUHhIbE9XRDdJT3B0CmlCTzIyczVQdHQ2YkJiQVB2M3R5U1pybmliZ2t1dy9qLzBmTzl4RENKMHpVbUN0SStaV2JBUGtieW5sVnZLb3EKRnhNaCtLa0NnWUVBK3VuKzNqc2s4c0J0WGhucTY0YVpndXhzbzlIemdSMmsxd25adW54K0lHZDFVM3hlSUExegp1Zm1ueXNaS25tcFVNdFhpT3FoMUhIOXRueU9ITjlLRE5HcEh3NDlScjI4OFJ6U1FYazI3N2FhaTNVb0VvQW5jCjJtVDg0V2ZIaDB1QUxha0tvNTJDMlJBMmwyUE5iZmxHSHJIZ21SWFJta0lqM2sxL2p3TnRCbFVDZ1lFQTUxMkoKTjNLbkRwWjBDWnVmYzFVL3dPdjlFeXp2SWxBV1Y1QWZtSHViVWNmZnhNNjZKc0RFZldIQmxvRDdWZTR6V1puYwpuRzM5bE1BWlRNSTF3OFR4UjZhZEgrSGI3RzRldG4vSFREZ1kzVSttNEg1cVpvcmpKcFhmSHcvbDZ4TEt1VlhrCjV5YUZ5L2RrdFZsY1lOU3hOM3BSV29wdHBoNG1SakdsV04vRW83Y0NnWUJ1dUFpT0diMGhIVVpsYXJ4ZDk4UVAKb0xJRHkrWk9pRDB2NHBuZ0Q0VThXVXJOYnlpOXJoSHQ4N3RWNEJBWFBVWXdORzhpZ1NsRVRQcWJhWHNHWis4YgpsdlpaMWdrdWg4QXFqNGhSQks0em5QOXE5SGw4QVQ0aVpNT3QxelNWZi94c3FaWVhRcTcxaDVEL1ZydlVsbFdaCnY5WWkxeHpwbTl2bUFYNlRKZWpiRFFLQmdRQ3BtelVhODY2cGovdXlpMlhoVzI0b0ZCZHE5amE3bGJBN01va20KOC80UmZvOTRxLzlrcDAyamlJVXN1cE1GRkdDS1g3T003VWpHd2VnS0VCanYwYkQ2MEpaQXFBYmJsSUpwVU5TZAorRVdwLzFrYkd6RU95T1BxQmxZUlpFc3MvNUtqT09kYjJDNmZMbFdpWjhiRHFVZmNub3VDN3hXZ2dGdVllNDUxCnoxeE1rd0tCZ1FDN1M2QkJOV0dJRDNCcHIvS09IY0krZktmRzdBdXBxeTJLNlpscHBiaXNnN2hhYnhaOEswbzQKSSs5RXhBbzhlbDJsOGlVN3g5RmdHU1pBOHU1SWpzVFErSHNHNTlPeStXNFdDeFNHUHgxcHBjb1VXK1VvaDNuQwpYb2QvMXlOSDYzR1ZCSHk1TU8wQzRQTE9BcFJpYXJacERsUHlDVE9KcnBHTDVnYnliTTIybmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-with-auth
  namespace: {{ .Values.namespace }}
  annotations:
    #nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    #nginx.ingress.kubernetes.io/auth-tls-secret: ingress-nginx-certificates-secret
    #nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: ingress-nginx-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - api'
spec:
  tls:
    - hosts:
        - api.smart-agriculture.com
      secretName: ingress-nginx-certificates-secret
  rules:
    - host: api.smart-agriculture.com
      http:
        paths:
          - path: /
            backend:
              serviceName: api
              servicePort: 80 #5000


#curl -v -H "Host: api.smart-agriculture.com" -u "api:bar" https://35.189.120.41:80
#curl -v -H "Host: api.smart-agriculture.com" -u "api:bar" --cacert deploy/certificates/api/tls.crt https://35.189.120.41:80
#ip du controller