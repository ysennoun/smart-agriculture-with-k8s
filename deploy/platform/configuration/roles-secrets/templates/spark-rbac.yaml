apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark-sa
  namespace: {{ .Values.namespace }}

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: spark-role
rules:
  - apiGroups:
      - ""
    resources:
      - "pods"
    verbs:
      - "*"

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: spark-role-binding
  namespace: {{ .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: spark-sa
    namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: spark-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: spark-admin
rules:
  # Just an example, feel free to change it
  - apiGroups: [""]
    resources: ["pods", "nodes", "services", "configmaps"]
    verbs: ["get", "watch", "create", "delete", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: spark-rbac
  namespace: {{ .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: spark-admin
  apiGroup: rbac.authorization.k8s.io